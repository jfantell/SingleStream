<!DOCTYPE html>
<html ng-app="playlists"> <!--   --> <!--<![endif]-->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <!-- use the width of the device's screen so it looks good -->
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">

        <title>SingleStream</title>
      
        <!-- Custom fonts for this template -->
        <link href="profile_resources/css/font-awesome.min.css" rel="stylesheet" type="text/css">
        <link href="https://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic" rel="stylesheet" type="text/css">
        <link href='https://fonts.googleapis.com/css?family=Cabin:700' rel='stylesheet' type='text/css'>
        <!-- Fonts  -->
        <link href='http://fonts.googleapis.com/css?family=Lato:300' rel='stylesheet' type='text/css'>
        <!-- Bootstrap Core CSS -->
        <link href="profile_resources/css/bootstrap.css" rel='stylesheet' type='text/css' />
        <!-- For the button that opens up the sidebar menu-->
        
        <link rel="stylesheet" href="profile_resources/css/icon-font.css" type='text/css' />
         
          <!-- Custom css specifically for this page (not the menu and sidebar) -->
        <link href="profile_resources/css/grayscale.css" rel="stylesheet">
        <!-- Custom css file for this page (mostly the sidebar and menu)-->
        <link href="profile_resources/css/style.css" rel='stylesheet' type='text/css' /> 
        <!-- jQuery -->
        <script src="profile_resources/js/jquery-2.1.4.js"></script>
        <link href="profile_resources/css/font-awesome.css" rel="stylesheet"> 
        <!-- lined-icons -->  

    </head>

<body ng-controller="mainController" class="sticky-header left-side-collapsed">
  <!-- onload="initMap() --> 
    <section>
      <!-- left side start-->
    <div class="left-side sticky-left-side">

      <!--logo and iconic logo start-->
      <div class="logo">
        <h1><a href="/profile">Single<span>Stream</span></a></h1>
      </div>
      <div class="logo-icon text-center">
        <a href="/profile">SS </a>
      </div>
   <!-- /w3l-agile -->



  <div class="left-side-inner">
        <!--sidebar nav start-->
        <!-- These links are dead, not sure what the actual files names will end up being -->
          <ul class="nav nav-pills nav-stacked custom-nav">
            <li class="active"><a href="/profile"><i class="lnr lnr-home"></i><span>Profile</span></a></li> 
            <li><a href="/friends"><i class="lnr lnr-users"></i> <span>Friends</span></a></li> 
            <li><a href="/playlists"><i class="lnr lnr-music-note"></i> <span>Playlists</span></a></li>           
            <li><a href="/analytics"><i class="lnr lnr-indent-increase"></i> <span>Analytics</span></a></li>
            <li><a href="/contact"><i class="lnr lnr-book"></i><span>Contact</span></a></li>
            <li><a href="/logout"><i class="logout"></i><span>Logout</span></a></li>
            </li>
          </ul>
        <!--sidebar nav end-->
      </div>
    </div>



  <!-- main content start-->
    <div class="main-content">
      <!-- header-starts -->
      <div class="header-section">
      <!--toggle button start-->
      <a class="toggle-btn  menu-collapsed"><i class="fa fa-bars"></i></a>
      <!--toggle button end-->


      <!--notification menu start -->
        <div class="menu-right">
          <div class="profile_details">  
            <div class="col-md-9">
            </div> 
                      <!-- This is the login button, this should probably end up throwing you the our own specific login page -->
                      <!-- I just am not sure what that is going to look like yet so this is just a template from online -->
                      <div class="col-md-3 login-pop">
                        <div id="loginpop"> <a href="#" id="loginButton"><span>+Add Playlist</span></a><a class="top-sign" href="#" data-toggle="modal" data-target="#myModal5"></a>
                            <div id="loginBox">  
                             <form id="loginForm">
                                  <fieldset id="body">
                                    <fieldset>
                                      <div class="form-group">
                                        <label for="usr">Create a new playlist:</label>
                                        <input type="text" class="form-control" placeholder="Playlist Name - Required" id="playlist_name" ng-model="playlist_name">
                                      </div>
                                      <div class="form-group">
                                          <label for="comment">Description:</label>
                                          <textarea class="form-control" rows="5" placeholder="Optional Description" id="description" ng-model="description"></textarea>
                                      </div>
                                      <div class="form-group">
                                        <label for="usr">Tags (comma seperated):</label>
                                        <input type="text" class="form-control" placeholder="Pop, Hip-Hop" id="tags" ng-model="tags">
                                      </div>
                                    </fieldset>
                                    <input type="submit" id="login" class="btn btn-primary" value="Create" ng-click="create()">
                                  </fieldset>
                             </form>
                          </div>
                        </div>

                      </div>
                    <div class="clearfix"> </div>
                </div>
              </div>
          <div class="clearfix"></div>
          </div> <!-- Header Section -->

        <div id="page-wrapper">
        <div class="inner-content">
        
        <!-- END MENU AND SIDEBAR -->
        
<!--////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->




                  <div class="modal fade" id="myModal" role="dialog">
                    <div class="modal-dialog">
                      <!-- Modal content-->
                      <div class="modal-content">
                        <div class="modal-header">
                          <button type="button" class="close" data-dismiss="modal">&times;</button>
                          <h4 class="modal-title" style="color: black;">Add Songs</h4>
                        </div>
                        <div class="modal-body" style="color:black;">
                          <div id="search_field" class="form-group">
                      <label for="usr">Search for a new song or video to your playlist:</label>
                      <input type="text" class="form-control" placeholder="Billie Jean" id="query" ng-model="query">
                      <input type="submit" class="btn btn-primary" value="Search" ng-click="search()">
                      <input type="submit" class="btn btn-success" value="Apply" ng-click="apply()">
                    </div>
                    <div id="noResult" class ="well yellow-well"></div>
                    <div id="searh_results" class="well yellow-well">
                      <ul><li ng-repeat="result in search_results track by $index">"{{result[2]}}" - {{result[1]}}  [{{result[5]}}] <button ng-click="add(result)" class="btn btn-primary">Add</button></li></ul>
                    </div>
                        </div>
                        <div class="modal-footer">
                          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                      </div> 
                    </div>
                  </div>




 <!-- =====================LEFT TABLE OF PLAYLIST NAMES============================== -->
                <!-- <div class="container"> -->
                  <div class="col-md-3">
                    <div class="playlistwell">
                      <h3> Playlists </h3>
                      <div id="all_playlists">
                      <table>
                        <tr ng-repeat="playlist in user_playlists track by $index">
                          <td class="playlist_view" ng-click="load_playlist_view($index)"> {{playlist.name}}
                        </td></tr>
                      </div>
                       
                      </table>
                    </div>
                  </div>
                </div>

        <!-- ===================View the current playlist ============================ -->
         <div id="views">           
        <div class="col-md-9">

              <div ng-if="isFlashEnabled()==1">
                  <div class="alert">
                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> 
                    <strong> Flash is required to play napster content.</strong> Please install flash if you do not have it. If the plugin is disabled, please enable it for this website. If you need help doing this, click here.
                  </div>
                </div>

              <div class="playlistwell">
                <table>
                  <tr><h1>{{current_playlist_name}}</h1></tr>
                  <tr><p>{{current_playlist_description}}</p></tr>
                  <tr>
                    <th>Name</th>
                    <th>Artist/Channel</th>
                    <th>Duration</th>
                    <th>Source</th>
                    <th id="autoplay"> <button ng-click="build_autoplay()" class="btn playlist-btn">Auto Play</button></th>
                    <th id='delete_playlist'>
                        <button ng-click="delete_playlist()" class="btn btn-danger">Delete Playlist</button>
                    </th>
                    <th id="kill_autoplay"> <button ng-click="kill_autoplay()" class="btn btn-warning">Stop Auto Play</button></th>
                    <th id="search_field" class="form-group">
                      <button data-toggle="modal" data-target="#myModal" class="btn playlist-btn">add</button> </th>
                  </tr>
                  <tr ng-repeat="song in tracks track by $index">
                    <td>{{song.track_name}}</td>
                    <td>{{song.channel_artist}}</td>
                    <td>{{msTime(song.runtime)}}</td>
                    <td>{{song.source}}</td>
                    <td id="playbutton" ng-if="song.source=='napster'" ng-click="play_napster_track(song.track_id)" >Play</td>
                    <td ng-if="song.source=='napster'" ng-click="pause_napster_track(song.track_id)">Pause</td>
                    <td ng-if="song.source=='youtube'"><iframe id="{{song.track_id}}" width="420" height="315"
                                src="{{song.url | trustAsResourceUrl}}">
                              </iframe></td>
                    <td id="{{song.track_id}}"><button class="btn btn-danger" id="{{song.track_id}}" data-ng-click="delete_track($event)">-</button></td>
                </table>
              </div>
            </div>
            </div>

        <!-- END PAGE CONTENT -->
<!--////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
      </div>
      </div>
       <!-- <div id="page-end"> -->
 
    </div> <!--End main content -->

  </section>


<!-- Additional Scripts -->
<script src="profile_resources/js/jquery.nicescroll.js"></script>
<script src="profile_resources/js/scripts.js"></script>
<script src="profile_resources/js/bootstrap.js"></script>

<!--For playlists-->
<!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
 --><script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular-sanitize.js"></script>

</body>

<script src="playlist_resources/napster.js"></script>
<script src="playlist_resources/napster_client.js"></script>

<script>
$(document).ready(function(){
    $("#hide").click(function(){
        $("p").hide();
    });
    $("#show").click(function(){
        $("p").show();
    });
});
</script>

<script>
// popup examples
$( document ).on( "pagecreate", function() {
    // The window width and height are decreased by 30 to take the tolerance of 15 pixels at each side into account
    function scale( width, height, padding, border ) {
        var scrWidth = $( window ).width() - 30,
            scrHeight = $( window ).height() - 30,
            ifrPadding = 2 * padding,
            ifrBorder = 2 * border,
            ifrWidth = width + ifrPadding + ifrBorder,
            ifrHeight = height + ifrPadding + ifrBorder,
            h, w;
        if ( ifrWidth < scrWidth && ifrHeight < scrHeight ) {
            w = ifrWidth;
            h = ifrHeight;
        } else if ( ( ifrWidth / scrWidth ) > ( ifrHeight / scrHeight ) ) {
            w = scrWidth;
            h = ( scrWidth / ifrWidth ) * ifrHeight;
        } else {
            h = scrHeight;
            w = ( scrHeight / ifrHeight ) * ifrWidth;
        }
        return {
            'width': w - ( ifrPadding + ifrBorder ),
            'height': h - ( ifrPadding + ifrBorder )
        };
    };
    $( ".ui-popup iframe" )
        .attr( "width", 0 )
        .attr( "height", "auto" );
    $( "#popupVideo" ).on({
        popupbeforeposition: function() {
            // call our custom function scale() to get the width and height
            var size = scale( 497, 298, 15, 1 ),
                w = size.width,
                h = size.height;
            $( "#popupVideo iframe" )
                .attr( "width", w )
                .attr( "height", h );
        },
        popupafterclose: function() {
            $( "#popupVideo iframe" )
                .attr( "width", 0 )
                .attr( "height", 0 );
        }
    });
});
</script>

<script>
$(document).ready(function() {
  player();
})

  ///youtube player info https://codepen.io/chriscoyier/pen/zawHg
  // Inject YouTube API script
  var tag = document.createElement('script');
  tag.src = "//www.youtube.com/player_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);



  var app = angular.module("playlists", []);
  // app.config(function($sceProvider){
  //     $sceProvider.enabled(false);
  // });
  app.controller("mainController", ['$scope','$http','$compile','$timeout','$interval',function($scope, $http, $compile, $timeout,$interval) {

    $scope.msTime = function(string) {
      var minuteValue = parseInt(parseInt(string)/60);
      var secondsValue = parseInt(string)%60;
      return minuteValue + ":" + secondsValue;
    }

    $scope.query = ""; //Parameter for searching new songs or videos
    $scope.playlist_name = ""; //Name of new playlist
    $scope.description = ""; //Description for new playlist
    $scope.tags = ""; //Tags for new playlist
    $scope.user_playlists = []; //Returned videos and songs from search
    $scope.tracks = null; //Tracks from custom playlists
    $scope.trustedHtml = "";
    $scope.search_results = [];
    $scope.current_playlist = ""; //object id
    $scope.current_playlist_name = "";
    $scope.current_playlist_description = "";
    $scope.flash_enabled = false;
    $scope.current_track_index = ""; //index in the track in the current playlist array

    function recursive_play(i){
      var duration = 200;
      //base case (stop recursion)
      if(i == $scope.tracks.length){
          console.log("End of playlist reached");
          return;
      }

      // All songs except for the first. Set delay-duration to previous song's length
      // Call the youtube or napster player in timeout function after the delay.
      // Then call recursion with next song's index.
      if(i != 0){
        console.log($scope.tracks[i-1].runtime);
        duration = parseInt($scope.tracks[i-1].runtime)*1000;
        console.log(duration);

        if($scope.tracks[i].source == "youtube"){
          $timeout(function() {
            var url = $('#' + $scope.tracks[i].track_id).attr('src')
            url = url+'?autoplay=1';
            console.log(url);
            $('#' + $scope.tracks[i].track_id).attr('src', url)
          }, duration).then(function() {
            recursive_play(i+1);
          });
        }
        else if($scope.tracks[i].source == "napster"){
          $timeout(function() {
            Napster.player.play($scope.tracks[i].track_id);
          }, duration).then(function() {
            recursive_play(i+1);
          });
        }
      }

      // First song: no delay, just call the player it needs.
      // Then immediately call the recusion with next song's index
      else {
        if($scope.tracks[i].source == "youtube"){
        
          var url = $('#' + $scope.tracks[i].track_id).attr('src')
          url = url+'?autoplay=1';
          console.log(url);
          $('#' + $scope.tracks[i].track_id).attr('src', url)

          recursive_play(i+1);

        }
        else if($scope.tracks[i].source == "napster"){
            Napster.player.play($scope.tracks[i].track_id);
            recursive_play(i+1);
        
        }
      }
      
    }


    //Current track id
    $scope.build_autoplay = function(){
      $('#kill_autoplay').show();
      $('#autoplay').hide();
      var i = 0;
      recursive_play(i);
    }

    $scope.kill_autoplay = function(){
       location.reload();
    }

    //Toggle create new playlist button

    $scope.isFlashEnabled = function(){
        var flash = navigator.plugins.namedItem('Shockwave Flash');
        if (!flash) { return 0; } 
        else { return 1; }
    }

    $scope.play_napster_track = function(id){
       Napster.player.play(id);
       // $scope.build_auto_play(id);
    }

    $scope.pause_napster_track = function(id){
      // player(id,'pause');
      Napster.player.pause();
    }

    //Load playlists into view when user clicks on a specific playlist
    $scope.load_playlist_view = function(i){
        $('#search_field').show();
        $('#views').show();
        $scope.tracks = $scope.user_playlists[i].tracks;
        $scope.current_playlist = $scope.user_playlists[i]._id;
        $scope.current_playlist_name = $scope.user_playlists[i].name;
        $scope.current_playlist_description = $scope.user_playlists[i].description;
    }

    //Retrieve all custom playlists from backend
    $scope.get_playlists = function(){
      var req = {
          method: 'GET',
          url: '/get_playlists',
      }
      $http(req).success(function(data){
          $scope.user_playlists = data;
      });
    }

    //On page load, hide the search field for adding new songs to an existing playlist
    angular.element(document).ready(function () {
      $('#search_field').hide();
      $('#views').hide();
      $('#kill_autoplay').hide();
      $timeout($scope.get_playlists, 10);
    });

    //Create new custom playlist
    $scope.create = function(){
      var req = {
          method: 'POST',
          url: '/create_playlist',
          data: {'playlist_name': $scope.playlist_name, 'description':$scope.description, 'tags': $scope.tags}
        }
      $http(req).success(function(data){
            if(data == "Done"){
                location.reload();
            }
      });
    }

    // Delete a custom playlist
    $scope.delete_playlist = function(){
      if (confirm('Are you sure you want to delete this playlist?')) {
      // Delete it!
      var req = {
            method: 'POST',
            url: '/delete_playlist',
            data: {'playlist_name': $scope.current_playlist_name}
          }
        $http(req).success(function(data){
              if(data == "Done"){
                  location.reload();
              }
        });
        } else {
      // Do nothing!
        }
    }

    $scope.delete_track = function(element) {
      if (confirm('Are you sure you want to delete this track?')) {
      // Delete it!
      var track_id = element.target.id;
      console.log(track_id);
      var req = {
            method: 'POST',
            url: '/delete_track',
            data: {'track_id': track_id, 'playlist_name': $scope.current_playlist_name}
          }
        $http(req).success(function(data){
              if(data == "Done"){
                  location.reload();
              }
        });
        } else {
      // Do nothing!
        }
    }

    //Search napster and youtube for new songs and videos to add to an existing custom playlist
    $scope.search = function(){
      if($scope.query.length == 0){
        alert("Please enter a song!")
        return;
      }
      var req = {
          method: 'POST',
          url: '/search',
          data: {'q': $scope.query}
        }
      $http(req).success(function(data){
        console.log(data);

        if (data == "101" || data == "102") {
          var source = "";
          if (data == "101") {source = "Napster"}
          else if (data == "102") {source = "Google"}

          var errors = "Refresh token is stored in the database, but is not valid. This may have occured because you revoked SingleStream's access to your" + source + " account. Please visit the profile page and re-authenticate."

          $('#noResult').html(errors);
          $('#noResult').show()
        }

        else if (data == "none") {
          var noResult = "Sorry, no results were found. Please verify service authentication";
          $('#noResult').html(noResult);
          $('#noResult').show()

        }

        else {
          $scope.search_results = data;
          console.log(data);
        }
      });
    }

    //Add a new song to a playlist
    $scope.add = function(result){
      var req = {
          method: 'POST',
          url: '/add_to_playlist',
          data: {'result': result, "playlist_id": $scope.current_playlist}
      }
      $http(req).success(function(data){
          alert("Song Ready to Add!");
      });
    }

    //Applies new changes to playlist
    $scope.apply = function(){
      location.reload();
    }

  }]);

  app.filter('trustAsResourceUrl', ['$sce', function($sce) {
  return function(val) { 
    return $sce.trustAsResourceUrl(val)
  };
}]);
</script>
</html>
