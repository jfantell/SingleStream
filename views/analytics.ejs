<!DOCTYPE html>
<html> <!--   --> <!--<![endif]-->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <!-- use the width of the device's screen so it looks good -->
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">

        <title>SingleStream</title>

        <!-- To use google visualizatoin -->
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script> 
        
      
        <!-- Custom fonts for this template -->
        <link href="profile_resources/css/font-awesome.min.css" rel="stylesheet" type="text/css">
        <link href="https://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic" rel="stylesheet" type="text/css">
        <link href='https://fonts.googleapis.com/css?family=Cabin:700' rel='stylesheet' type='text/css'>
        <!-- Fonts  -->
        <link href='http://fonts.googleapis.com/css?family=Lato:300' rel='stylesheet' type='text/css'>
        <!-- Bootstrap Core CSS -->
        <link href="profile_resources/css/bootstrap.css" rel='stylesheet' type='text/css' />
        <!-- For the button that opens up the sidebar menu-->
        
        <link rel="stylesheet" href="profile_resources/css/icon-font.css" type='text/css' />
         
          <!-- Custom css specifically for this page (not the menu and sidebar) -->
        <link href="profile_resources/css/grayscale.css" rel="stylesheet">
        <!-- Custom css file for this page (mostly the sidebar and menu)-->
        <link href="profile_resources/css/style.css" rel='stylesheet' type='text/css' /> 
        <!-- jQuery -->
        <script src="profile_resources/js/jquery-2.1.4.js"></script>
        <link href="profile_resources/css/font-awesome.css" rel="stylesheet"> 

        <style>

          table {
            opacity: 1;
            font-family: arial, sans-serif;
            font-size:12pt !important;
            border-collapse: collapse;
            width: 100%;
          }

          td, th {
              border: 1px solid #555;
              text-align: center;
              line-height: 1.5em;
          }   

          tr:nth-child(odd){
            background-color: white;
          }

          tr:nth-child(even) {
              background-color: #f5f5f5;
          }
        .loading_ {
          margin-top: 10px;
        }
        </style>

    </head>

<body class="sticky-header left-side-collapsed">
  <!-- onload="initMap() --> 
    <section>
      <!-- left side start-->
    <div class="left-side sticky-left-side">

      <!--logo and iconic logo start-->
      <div class="logo">
        <h1><a href="/profile">Single<span>Stream</span></a></h1>
      </div>
      <div class="logo-icon text-center">
        <a href="/profile">SS </a>
      </div>
   <!-- /w3l-agile -->



  <div class="left-side-inner">

        <!--sidebar nav start-->
          <ul class="nav nav-pills nav-stacked custom-nav">
            <li class="active"><a href="/profile"><i class="lnr lnr-home"></i><span>Profile</span></a></li> 
            <li><a href="/friends"><i class="lnr lnr-users"></i> <span>Friends</span></a></li> 
            <li><a href="/playlists"><i class="lnr lnr-music-note"></i> <span>Playlists</span></a></li>           
            <li><a href="/analytics"><i class="lnr lnr-indent-increase"></i> <span>Analytics</span></a></li>
            <li><a href="/contact"><i class="lnr lnr-book"></i><span>About Us</span></a></li>
            <li><a href="/logout"><i class="logout"></i><span>Logout</span></a></li>
            </li>
          </ul>
        <!--sidebar nav end-->
      </div>
    </div>



  <!-- main content start-->
    <div class="main-content">
      <!-- header-starts -->
      <div class="header-section">
        <!--toggle button start-->
        <a class="toggle-btn  menu-collapsed"><i class="fa fa-bars"></i></a>
        <!--toggle button end-->
        <!--notification menu start -->
        <div class="menu-right">
          <div class="profile_details">   
          <div class="col-md-3">
          </div>
          <div class="clearfix"> </div>
          </div>
        </div>
        <div class="clearfix"></div>
      </div> <!-- Header Section -->

        <div id="page-wrapper">
        <div class="inner-content">
        
        <!-- END MENU AND SIDEBAR -->
        
<!--////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->

        <!-- PAGE CONTENT GOES HERE  -->

      <!-- Intro Header -->
            <div class="container" ng-app="myApp" > 
                <div class="container" ng-controller="mainController">
                  <div class="well">
                  
                    <div class="alert" style="background-color: #477d8c;">
                      <strong> Please select one or more of the following checkboxes to filter results. Select a search query. Then press SEARCH!</strong>
                  </div>

                  <div class="row">

                    <div class="col-md-2">
                      <label>Following:
                        <input type="checkbox" ng-model="checkboxModel.following"
                                ng-true-value="'YES'" ng-false-value="'NO'">
                      </label><br/>
                    </div>

                    <div class="col-md-2">
                      <label>Followers:
                        <input type="checkbox" ng-model="checkboxModel.followers"
                               ng-true-value="'YES'" ng-false-value="'NO'">
                      </label><br/>
                    </div>

                    <div class="col-md-2">
                      </label>My Playlists:
                        <input type="checkbox" ng-model="checkboxModel.me"
                               ng-true-value="'YES'" ng-false-value="'NO'">
                       </label><br/>
                     </div>

                    <div class="col-md-3">
                     <label for="mySelect">Make a choice:</label>
                     <select name="analytics_select" id="analytics_select" ng-options="option.name for option in analyticsOptions.options track by option.id" ng-model="analyticsOptions.selectedOption"></select>
                   </div>

                    <div class="col-md-2">
                      <input type="submit" id="login" class="btn btn-primary" value="Search" ng-click="artist_search()">
                    </div>
                 </div> <!--End row for input selection-->
               </div> <!-- End well containing input options-->

               <!-- Row to hold the buttons for selecting the desired visual -->
                  <div class="row">
                    <div class="col-md-3">
                    </div>
                       <div class="col-md-2">
                            <button ng-click="show('table')" class="btnSearch btn btn-default" style="background-color:#222222;color:white;"> Draw Table </button>
                        </div>

                        <div class="col-md-2">
                            <button ng-click="show('gauge')" class="btnSearch btn btn-default" style="background-color:#222222;color:white; opacity:1"> Draw Gauge </button>
                        </div>

                        <div class="col-md-2">
                            <button ng-click="show('donut')" class="btnSearch btn btn-default" style="background-color:#222222;color:white; opacity:1"> Draw Donut </button>
                        </div>
                        <div class="col-md-3">
                        </div>
   
                  </div> <!-- Ends the Row class -->

                  <!--Graphs-->
                  <div class="row" id="graphView">
                    <div class="col col-md-3">
                      <div class="well">
                        <!--Description of graph-->
                        <p id="description"></p>
                      </div>
                    </div>
                    <div class="col col-md-6"><div id="graphs" style="margin-top: 10px;width: 100%; height: 600px;color:black"></div></div>
                    <div class="col col-md-3"></div>
                  </div>

                  <!--Show when loading-->
                  <div class="row" id="loadingView">
                    <div class="col col-md-3"></div>
                    <div class="col col-md-6 loading_"><img src="analytics_resources/Moonwalk.gif" alt="Loading" height="400" width="600"></div>
                    <div class="col col-md-3"></div>
                  </div>

              </div>
            </div>
          </div>
        </div>        

        <!-- END PAGE CONTENT -->
<!--////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
      </div>
      </div>
       <!-- <div id="page-end"> -->
 
    </div> <!--End main content -->

  </section>

<!-- Additional Scripts -->
<script src="profile_resources/js/jquery.nicescroll.js"></script>
<script src="profile_resources/js/scripts.js"></script>
<script src="profile_resources/js/bootstrap.js"></script>

<!--For playlists-->
<!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script> -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<!-- <script type="text/javascript" src="angular.min.js"></script> -->
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular.min.js"></script>
<!-- <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script> -->
<!-- <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script> -->
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.0/angular-animate.min.js"></script>

<!-- <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js"></script> -->
<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular-sanitize.js"></script>

</body>

<!-- Script to call the Google Charts API to create the visualizations -->
<script type="text/javascript">
    
      //Called when the user selects the 'Draw Table' option
      function drawTable(dic,keys,option) {
        if(keys.length == 0){
          alert("Please select the appropriate filters and then press the search button to visualize your music!");
          $('#loadingView').hide();
          return;
        }
        //First column name will be different depending on the option the user selects to get analytics on
        //Three options exist at this time: Artists, Tracks, Tags
        var first_column = "";
        var description = "";
        if(option == "Artists"){
          first_column = "Artists";
          description = "<span style='color:red;'>Frequency of Artists Across Checked Categories.</span>";
        }
        else if(option == "Tracks"){
          first_column = "Tracks";
          description = "<span style='color:red;'>Frequency of Tracks Across Checked Categories.</span>";
        }
        else if(option == "Tags"){
          first_column = "Tags";
          description = "<span style='color:red;'>Frequency of Tags Across Checked Categories.</span>";
        }

        //Find the artists and their counts by iterating through the dictionary
        var arr = [];
        for(i=0; i< keys.length; i++){
          arr.push([String(keys[i]),parseInt(dic[keys[i]])]);
          console.log([String(keys[i]),parseInt(dic[keys[i]])]);

          if(i == keys.length-1){ //if you get to the end of the keys list
            setTimeout(function(){ //call the google api with the data
              console.log("Hey what up"); 
              console.log(arr);
              var data = new google.visualization.DataTable();
              data.addColumn('string', first_column);
              data.addColumn('number', 'Frequency');
              data.addRows(arr);
              $('#description').html(description); //Update the description in the html
              $('#graphView').show(); //show the chart
              $('#loadingView').hide(); //Hide the gif

              //Call the google charts api to create the table
              var table = new google.visualization.Table(document.getElementById('graphs'));
              table.draw(data, {showRowNumber: true, width: '100%'});
            }, 3000);
          }
        }      
      }

      //This function is called when the user selects "Draw Gauge"
      function drawChart(dic,keys,option) {
        if(keys.length == 0){ //Make sure the user has selected a filter
          alert("Please select the appropriate filters and then press the search button to visualize your music!");
          $('#loadingView').hide();
          return;
        }

        //format the chart parameters based on the filter selected by the user
        var first_column = "";
         var description = "";
        if(option == "Artists"){
          first_column = "Artists";
          description = "<span style='color:red;'>Frequency of Artists Across Checked Categories.</span>  The Artist names are displayed above the blue dot in the center of the gauge. The frequency is displayed below the blue dot. Sometimes the Artist's name may be cutoff if it is too long.";
        }
        else if(option == "Tracks"){
          first_column = "Tracks";
          description = "<span style='color:red;'>Frequency of Tracks Across Checked Categories.</span> The Track names are displayed above the blue dot in the center of the gauge. The frequency is displayed below the blue dot. Sometimes the Track name may be cutoff if it is too long.";
        }
        else if(option == "Tags"){
          first_column = "Tags";
          description = "<span style='color:red;'>Frequency of Tags Across Checked Categories.</span> The Tag names are displayed above the blue dot in the center of the gauge. The frequency is displayed below the blue dot. Sometimes the Tag name may be cutoff if it is too long.";
        }

        var arr = [[first_column,'Frequency']];
        for(i=0; i< keys.length; i++){ //iterate through the direction to collect the data needed
          arr.push([String(keys[i]),parseInt(dic[keys[i]])]);
          if(i == keys.length-1){ //if you reach the end of the list
            setTimeout(function(){ //create and insert the google chart visualization
              console.log(arr);
              var data = google.visualization.arrayToDataTable(arr);
              var options = {
                width: 400, height: 300,
                redFrom: 90, redTo: 100,
                yellowFrom:75, yellowTo: 90,
                minorTicks: 5
              };
              $('#description').html(description); //update the description
              $('#graphView').show(); //show the chart view
              $('#loadingView').hide(); //Hide the loading gif

              //Call the Chart API and draw the appropriate chart
              var chart = new google.visualization.Gauge(document.getElementById('graphs'));
              chart.draw(data, options);
            }, 3000);
          }
        }      
      }
            
    //this function is called if the user selects "Draw Donut"
    function drawPie(dic, keys,option) {
      if(keys.length == 0){ //make sure the user has selected a filter
          alert("Please select the appropriate filters and then press the search button to visualize your music!");
          $('#loadingView').hide();
          return;
      }

      //format the chart api parameters based on what option the user selected
      var first_column = "";
      var description = "";
      if(option == "Artists"){
        first_column = "Artists";
        description = "<span style='color:red;'>Frequency of Artists Across Checked Categories.</span>  Each piece of the pie corresponds to a particular artist. The larger the piece, the greater the frequency of that artist.";
      }
      else if(option == "Tracks"){
        first_column = "Tracks";
        description = "<span style='color:red;'>Frequency of Tracks Across Checked Categories.</span> Each piece of the pie corresponds to a particular track. The larger the piece, the greater the frequency of that track.";
      }
      else if(option == "Tags"){
        first_column = "Tags";
        description = "<span style='color:red;'>Frequency of Tags Across Checked Categories.</span> Each piece of the pie corresponds to a particular tag. The larger the piece, the greater the frequency of that tag.";
      }

      //Go through the dictionary and collect the needed information
      var arr = [[first_column, 'Frequency']];
      for(i=0; i< keys.length; i++){
        arr.push([String(keys[i]),parseInt(dic[keys[i]])]);
        if(i == keys.length-1){ //When you reach the end of the dictionary
          setTimeout(function(){ 
            //Populate the chart view with the data and the desired option
            console.log(arr);
            var data = google.visualization.arrayToDataTable(arr);
            var options = {
              pieHole: 0.4,
            };
            $('#description').html(description); //update the description of the chart
            $('#graphView').show(); //Show the chart
            $('#loadingView').hide(); //Hide the loading gif

            //Call the Google API and draw the chart as desired
            var chart = new google.visualization.PieChart(document.getElementById('graphs')); 
            chart.draw(data, options);
          }, 3000);
        }
      }  
    }

    angular.module('myApp', []).controller('mainController', ['$scope','$http', function ($scope, $http) {

        $scope.visual_dict = ""; //dictionary of artists, songs, or tags as keys and frequency as values
        $scope.visual_keys = ""; //list of keys (artists)
        $('#loadingView').hide(); //Only show when graph being loaded
        $('#graphView').hide();

        //Set the boxes to be checked as the default
        $scope.checkboxModel = {
           following : 'YES',
           followers : 'YES',
           me : 'YES'
         };

        //Called when the user clicks the search button
        $scope.artist_search = function(){
          // console.log("Selected Option " + );
          // var option = String($scope.analyticsOptions.options.name);
          var req = {
            method: 'POST',
            url: '/analytics_artist_search',
            data: {'checked': $scope.checkboxModel, 'option': $scope.analyticsOptions.selectedOption.name}//pass in the filters and options selected by the user
          }
          console.log("SEARCH");
          //Send a request to the server to get the desired information with the user's query
          $http(req).success(function(data){
            console.log(data);
            $scope.visual_dict = data[0]; //store the data in a dictionary so it can be used later
            $scope.visual_keys = data[1];
            console.log($scope.visual_keys.length);
            for(i=0; i<$scope.visual_keys.length; i++){
              console.log($scope.visual_dict[$scope.visual_keys[i]]);
            }
          });
        };

        //Set up the options array so we can use this info when sending a request
        $scope.analyticsOptions = {
          options: [
            {id: '1', name: 'Artists'},
            {id: '2', name: 'Tracks'},
            {id: '3', name: 'Tags'}
          ],
          selectedOption: {id: '1', name: 'Artists'} //This sets the default value of the select in the ui
        };

        //Function to show and hide the various charts on the page
        $scope.show = function(item){
        	console.log("show");
          $('#graphView').hide();
          $('#loadingView').show();

          //If the user selected table, call the draw table function
          if(item == 'table'){
            google.charts.load('current', {'packages':['table']});
            google.charts.setOnLoadCallback(drawTable($scope.visual_dict,$scope.visual_keys,$scope.analyticsOptions.selectedOption.name));
          }
          //if the user selected guage, call the draw chart function
          else if(item == 'gauge'){
            google.charts.load('current', {'packages':['gauge']});
            google.charts.setOnLoadCallback(drawChart($scope.visual_dict,$scope.visual_keys,$scope.analyticsOptions.selectedOption.name));
          }
          //if the user selected donut, call the draw pie function
          else if(item == 'donut'){
            google.charts.load("current", {packages:['corechart']});
            google.charts.setOnLoadCallback(drawPie($scope.visual_dict,$scope.visual_keys,$scope.analyticsOptions.selectedOption.name));
          }
        };
    }]);

</script>

</html>
